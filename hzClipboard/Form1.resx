<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="VisualStudio2012DarkTheme1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="RadDesktopAlert1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>232, 17</value>
  </metadata>
  <data name="lst.Items" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFlNaWNyb3NvZnQuVmlzdWFsQmFzaWMsIFZlcnNpb249MTAuMC4w
        LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYQUBAAAAIE1p
        Y3Jvc29mdC5WaXN1YWxCYXNpYy5Db2xsZWN0aW9uBAAAAARLZXlzCUtleXNDb3VudAZWYWx1ZXMLQ3Vs
        dHVyZUluZm8GAAUDCCBTeXN0ZW0uR2xvYmFsaXphdGlvbi5DdWx0dXJlSW5mbwIAAAAJAwAAAAAAAAAJ
        BAAAAAkFAAAAEQMAAAAAAAAAEAQAAAAAAAAABAUAAAAgU3lzdGVtLkdsb2JhbGl6YXRpb24uQ3VsdHVy
        ZUluZm8KAAAADG1faXNSZWFkT25seQtjb21wYXJlSW5mbwh0ZXh0SW5mbwdudW1JbmZvDGRhdGVUaW1l
        SW5mbwhjYWxlbmRhcgptX2RhdGFJdGVtCWN1bHR1cmVJRAZtX25hbWURbV91c2VVc2VyT3ZlcnJpZGUA
        AwMDAwMAAAEAASBTeXN0ZW0uR2xvYmFsaXphdGlvbi5Db21wYXJlSW5mbx1TeXN0ZW0uR2xvYmFsaXph
        dGlvbi5UZXh0SW5mbyVTeXN0ZW0uR2xvYmFsaXphdGlvbi5OdW1iZXJGb3JtYXRJbmZvJ1N5c3RlbS5H
        bG9iYWxpemF0aW9uLkRhdGVUaW1lRm9ybWF0SW5mbyZTeXN0ZW0uR2xvYmFsaXphdGlvbi5HcmVnb3Jp
        YW5DYWxlbmRhcggIAQEJBgAAAAkHAAAACQgAAAAJCQAAAAkKAAAAAAAAAAkEAAAGCwAAAAVlbi1VUwEE
        BgAAACBTeXN0ZW0uR2xvYmFsaXphdGlvbi5Db21wYXJlSW5mbwQAAAAGbV9uYW1lCXdpbjMyTENJRAdj
        dWx0dXJlDW1fU29ydFZlcnNpb24BAAADCAggU3lzdGVtLkdsb2JhbGl6YXRpb24uU29ydFZlcnNpb24G
        DAAAAAVlbi1VUwAAAAAJBAAACgQHAAAAHVN5c3RlbS5HbG9iYWxpemF0aW9uLlRleHRJbmZvBwAAAA9t
        X2xpc3RTZXBhcmF0b3IMbV9pc1JlYWRPbmx5DW1fY3VsdHVyZU5hbWURY3VzdG9tQ3VsdHVyZU5hbWUL
        bV9uRGF0YUl0ZW0RbV91c2VVc2VyT3ZlcnJpZGUNbV93aW4zMkxhbmdJRAEAAQEAAAABCAEIBg0AAAAB
        LAEGDgAAAAVlbi1VUwkOAAAAAAAAAAAJBAAABAgAAAAlU3lzdGVtLkdsb2JhbGl6YXRpb24uTnVtYmVy
        Rm9ybWF0SW5mbyIAAAAQbnVtYmVyR3JvdXBTaXplcxJjdXJyZW5jeUdyb3VwU2l6ZXMRcGVyY2VudEdy
        b3VwU2l6ZXMMcG9zaXRpdmVTaWduDG5lZ2F0aXZlU2lnbhZudW1iZXJEZWNpbWFsU2VwYXJhdG9yFG51
        bWJlckdyb3VwU2VwYXJhdG9yFmN1cnJlbmN5R3JvdXBTZXBhcmF0b3IYY3VycmVuY3lEZWNpbWFsU2Vw
        YXJhdG9yDmN1cnJlbmN5U3ltYm9sEmFuc2lDdXJyZW5jeVN5bWJvbAluYW5TeW1ib2wWcG9zaXRpdmVJ
        bmZpbml0eVN5bWJvbBZuZWdhdGl2ZUluZmluaXR5U3ltYm9sF3BlcmNlbnREZWNpbWFsU2VwYXJhdG9y
        FXBlcmNlbnRHcm91cFNlcGFyYXRvcg1wZXJjZW50U3ltYm9sDnBlck1pbGxlU3ltYm9sDG5hdGl2ZURp
        Z2l0cwptX2RhdGFJdGVtE251bWJlckRlY2ltYWxEaWdpdHMVY3VycmVuY3lEZWNpbWFsRGlnaXRzF2N1
        cnJlbmN5UG9zaXRpdmVQYXR0ZXJuF2N1cnJlbmN5TmVnYXRpdmVQYXR0ZXJuFW51bWJlck5lZ2F0aXZl
        UGF0dGVybhZwZXJjZW50UG9zaXRpdmVQYXR0ZXJuFnBlcmNlbnROZWdhdGl2ZVBhdHRlcm4UcGVyY2Vu
        dERlY2ltYWxEaWdpdHMRZGlnaXRTdWJzdGl0dXRpb24KaXNSZWFkT25seRFtX3VzZVVzZXJPdmVycmlk
        ZQ1tX2lzSW52YXJpYW50FXZhbGlkRm9yUGFyc2VBc051bWJlchd2YWxpZEZvclBhcnNlQXNDdXJyZW5j
        eQcHBwEBAQEBAQEBAQEBAQEBAQYAAAAAAAAAAAAAAAAAAAAICAgICAgICAgICAgIAQEBAQEJDwAAAAkQ
        AAAACQ8AAAAGEgAAAAErBhMAAAABLQYUAAAAAS4GFQAAAAEsBhYAAAABLAYXAAAAAS4GGAAAAAEkCgYZ
        AAAAA05hTgYaAAAAA+KIngYbAAAABC3iiJ4JFAAAAAkVAAAABh4AAAABJQYfAAAAA+KAsAkgAAAAAAAA
        AAIAAAACAAAAAAAAAAAAAAABAAAAAAAAAAAAAAACAAAAAQAAAAEAAAEBBAkAAAAnU3lzdGVtLkdsb2Jh
        bGl6YXRpb24uRGF0ZVRpbWVGb3JtYXRJbmZvKwAAAAZtX25hbWUMYW1EZXNpZ25hdG9yDHBtRGVzaWdu
        YXRvcg1kYXRlU2VwYXJhdG9yF2dlbmVyYWxTaG9ydFRpbWVQYXR0ZXJuFmdlbmVyYWxMb25nVGltZVBh
        dHRlcm4NdGltZVNlcGFyYXRvcg9tb250aERheVBhdHRlcm4VZGF0ZVRpbWVPZmZzZXRQYXR0ZXJuCGNh
        bGVuZGFyDmZpcnN0RGF5T2ZXZWVrEGNhbGVuZGFyV2Vla1J1bGUTZnVsbERhdGVUaW1lUGF0dGVybhNh
        YmJyZXZpYXRlZERheU5hbWVzFG1fc3VwZXJTaG9ydERheU5hbWVzCGRheU5hbWVzFWFiYnJldmlhdGVk
        TW9udGhOYW1lcwptb250aE5hbWVzEmdlbml0aXZlTW9udGhOYW1lcx9tX2dlbml0aXZlQWJicmV2aWF0
        ZWRNb250aE5hbWVzEmxlYXBZZWFyTW9udGhOYW1lcw9sb25nRGF0ZVBhdHRlcm4Qc2hvcnREYXRlUGF0
        dGVybhB5ZWFyTW9udGhQYXR0ZXJuD2xvbmdUaW1lUGF0dGVybhBzaG9ydFRpbWVQYXR0ZXJuFGFsbFll
        YXJNb250aFBhdHRlcm5zFGFsbFNob3J0RGF0ZVBhdHRlcm5zE2FsbExvbmdEYXRlUGF0dGVybnMUYWxs
        U2hvcnRUaW1lUGF0dGVybnMTYWxsTG9uZ1RpbWVQYXR0ZXJucwptX2VyYU5hbWVzEG1fYWJicmV2RXJh
        TmFtZXMXbV9hYmJyZXZFbmdsaXNoRXJhTmFtZXMRb3B0aW9uYWxDYWxlbmRhcnMMbV9pc1JlYWRPbmx5
        C2Zvcm1hdEZsYWdzCUN1bHR1cmVJRBFtX3VzZVVzZXJPdmVycmlkZRBiVXNlQ2FsZW5kYXJJbmZvCW5E
        YXRhSXRlbRNtX2lzRGVmYXVsdENhbGVuZGFyC21fZGF0ZVdvcmRzAQEBAQEBAQEBAwAAAQYGBgYGBgYG
        AQEBAQEGBgYGBgYGBgcAAwAAAAAABiZTeXN0ZW0uR2xvYmFsaXphdGlvbi5HcmVnb3JpYW5DYWxlbmRh
        cggICAEoU3lzdGVtLkdsb2JhbGl6YXRpb24uRGF0ZVRpbWVGb3JtYXRGbGFncwgBAQgBCQ4AAAAGIgAA
        AAJBTQYjAAAAAlBNBiQAAAABLwoKBiUAAAABOgoKCQoAAAAAAAAAAAAAAAoKCgoKCgoKCgYnAAAAEmRk
        ZGQsIE1NTU0gZCwgeXl5eQYoAAAACmRkL01NL3l5eXkGKQAAAAlNTU1NIHl5eXkGKgAAAAhISDptbTpz
        cwYrAAAABUhIOm1tCSwAAAAJLQAAAAkuAAAACS8AAAAJMAAAAAoKCgkxAAAAAQTO////KFN5c3RlbS5H
        bG9iYWxpemF0aW9uLkRhdGVUaW1lRm9ybWF0RmxhZ3MBAAAAB3ZhbHVlX18ACP////8JBAAAAQAAAAAA
        AAoECgAAACZTeXN0ZW0uR2xvYmFsaXphdGlvbi5HcmVnb3JpYW5DYWxlbmRhcgYAAAAGbV90eXBlEW1f
        Y3VycmVudEVyYVZhbHVlD3R3b0RpZ2l0WWVhck1heBpDYWxlbmRhcittX2N1cnJlbnRFcmFWYWx1ZRVD
        YWxlbmRhcittX2lzUmVhZE9ubHkYQ2FsZW5kYXIrdHdvRGlnaXRZZWFyTWF4AwAAAAAAK1N5c3RlbS5H
        bG9iYWxpemF0aW9uLkdyZWdvcmlhbkNhbGVuZGFyVHlwZXMICAgBCATN////K1N5c3RlbS5HbG9iYWxp
        emF0aW9uLkdyZWdvcmlhbkNhbGVuZGFyVHlwZXMBAAAAB3ZhbHVlX18ACAEAAAD///////////////8B
        /////w8PAAAAAQAAAAgDAAAADxAAAAABAAAACAMAAAARIAAAAAoAAAAGNAAAAAEwBjUAAAABMQY2AAAA
        ATIGNwAAAAEzBjgAAAABNAY5AAAAATUGOgAAAAE2BjsAAAABNwY8AAAAATgGPQAAAAE5ESwAAAABAAAA
        Bj4AAAAJTU1NTSB5eXl5ES0AAAAIAAAABj8AAAAKZGQvTU0veXl5eQZAAAAACE0vZC95eXl5BkEAAAAG
        TS9kL3l5BkIAAAAITU0vZGQveXkGQwAAAApNTS9kZC95eXl5BkQAAAAIeXkvTU0vZGQGRQAAAAp5eXl5
        LU1NLWRkBkYAAAAJZGQtTU1NLXl5ES4AAAAEAAAABkcAAAASZGRkZCwgTU1NTSBkLCB5eXl5BkgAAAAM
        TU1NTSBkLCB5eXl5BkkAAAASZGRkZCwgZCBNTU1NLCB5eXl5BkoAAAAMZCBNTU1NLCB5eXl5ES8AAAAE
        AAAABksAAAAFSEg6bW0GTAAAAAdoOm1tIHR0Bk0AAAAIaGg6bW0gdHQGTgAAAARIOm1tETAAAAAEAAAA
        Bk8AAAAISEg6bW06c3MGUAAAAApoOm1tOnNzIHR0BlEAAAALaGg6bW06c3MgdHQGUgAAAAdIOm1tOnNz
        DzEAAAACAAAACAEAAAACAAAACw==
</value>
  </data>
</root>